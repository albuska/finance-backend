{
    "openapi": "3.1.0",
    "info": {
        "version": "1.0",
        "title": "Swagger documentation for the finance project 'Kapusta'",
        "description": "This Swagger documentation provides a comprehensive guide for interacting with the backend services of our application in a user-friendly manner. It outlines all the available API endpoints and their functionalities, allowing developers and users to seamlessly interact with the backend.\n\nPurpose:\nThe main purpose of this Swagger documentation is to facilitate a smooth and efficient interaction between users and the backend of our application. By offering a clear and structured overview of the API endpoints, parameters, and responses, it enables developers to easily understand and integrate the backend services into their applications.\n\nFeatures:\n1. Detailed API Endpoint Information: Each API endpoint is documented with clear descriptions of its purpose, supported HTTP methods, required parameters, and expected responses.\n\n2. Parameter Definitions: Input parameters for each API endpoint are precisely defined, including data types, constraints, and optional/mandatory attributes.\n\n3. Response Schemas: The structure and data types of API responses are outlined through well-defined response schemas, ensuring predictability and ease of integration.\n\n4. Error Handling: The documentation elaborates on possible error scenarios, along with relevant error codes and messages, to assist developers in handling exceptional cases effectively.\n\n5. Testability and Postman Alternative: All API endpoints documented here are thoroughly tested and ready for use, eliminating the need to rely solely on Postman for backend testing.\n\nBy leveraging this Swagger documentation, developers can confidently utilize the backend services, expedite development, and build robust applications with seamless integration.\n\nNote: Please ensure to refer to the latest version of this Swagger documentation for up-to-date information on the backend API endpoints and functionalities."
    },
    "consumes": ["application/json"],
    "produces": ["application/json"],
    "servers": [
        {
            "url": "http://localhost:3000/api",
            "description": "Dev Server"
        },

        {
            "url": "https://finance-backend-eight.vercel.app/api",
            "description": "Prod Server"
        }
    ],

    "tags": [
        {
        "name": "Auth",
        "description": "Authorization endpoints"
        },
        {
        "name": "Transactions",
        "description": "Transactions endpoints"
        },
        {
        "name": "Balance",
        "description": "Balance endpoints"
        },
        {
        "name": "Income",
        "description": "Income endpoints"
        },
        {
        "name": "Expenses",
        "description": "Expenses endpoints"
        }                

    ],

    "paths": {
        "/auth/register": {
            "post": {
                "tags": ["Auth"],
                "summary": "User registration",

                "requestBody": {
                    "description": "Registration's object",
                    "required": true,

                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/RegistrationRequest"
                        }
                    }
                }
            },

                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegistrationResponse"
                                }
                            }
                        }
                    },

                    "400": {
                        "description": "Bad request (invalid request body)",
                        "content": {
                            "application/json": {
                                "schema": {
                                "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },                    

                    "409": {
                        "description": "Email is already in use",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegistrationResponse"
                                }
                            }
                        }
                    }                    
                }
            }
        },

        "/auth/login": {
            "post": {
                "tags": ["Auth"],
                "summary": "User login",

                "requestBody": {
                    "description": "Login's object",
                    "required": true,

                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },

                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponse"
                                }
                            }
                        }
                    },

                    "400": {
                        "description": "Bad request (invalid request body)",
                        "content": {
                            "application/json": {
                                "schema": {
                                "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    
                    "401": {
                        "description": "Email or password is wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmailOrPasswordError"
                                }
                            }
                        }
                    },
                    
                    "default": {
                        "description":"Response message for error code 401, if email not verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref":"#/components/schemas/NotVerifiedError"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/auth/logout": {
            "post": {
                "tags": ["Auth"],
                "summary": "User logout",

                "security": [{ "Bearer": [] }],
                
                "requestBody": {
                    "description": "Logout's object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref":"#/components/schemas/LogoutRequest"
                            }
                        }
                    }
                },

                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },

                    "400": {
                        "description": "Bad request (invalid request body)",
                        "content": {
                            "application/json": {
                                "schema": {
                                "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    
                    "401": {
                        "description": "User is not authorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    }                
                }
            }
        },

        "/auth/refresh": {
            "get": {
                "tags": ["Auth"],
                "summary": "Refresh user's token",

                "security": [{ "Bearer": [] }],

                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },

                    "400": {
                        "description": "Bad request (invalid request body)",
                        "content": {
                            "application/json": {
                                "schema": {
                                "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    
                    "401": {
                        "description": "User is not authorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    }                
                }
            }
        },        

        "/transactions/balance": {
            "get": {
                "tags": ["Balance"],
                "summary": "User's transactions",

                "security": [{ "Bearer": [] }],

                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                "$ref": "#/components/schemas/BalanceResponse"
                                }
                            }
                        }
                    },

                    "400": {
                        "description": "Bad request (invalid request body)",
                        "content": {
                            "application/json": {
                                "schema": {
                                "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    
                    "401": {
                        "description": "User is not authorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    }                
                }
            },

            "post": {
                "tags": ["Balance"],
                "summary": "User's transactions",

                "security": [{ "Bearer": [] }],

                "requestBody": {
                    "description": "AddBalance's object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref":"#/components/schemas/AddBalanceRequest"
                            }
                        }
                    }
                },                

                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                "$ref": "#/components/schemas/AddBalanceResponse"
                                }
                            }
                        }
                    },

                    "400": {
                        "description": "Bad request (invalid request body)",
                        "content": {
                            "application/json": {
                                "schema": {
                                "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    
                    "401": {
                        "description": "User is not authorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    }                
                }
            }            
        },
        
        "/transactions/expenses": {
            "get": {
                "tags": ["Expenses"],
                "summary": "All user's expenses transactions",

                "security": [{ "Bearer": [] }],                

                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                "$ref": "#/components/schemas/GetAllTransactionsByTypeResponse"
                                }
                            }
                        }
                    },

                    "400": {
                        "description": "Bad request (invalid request body)",
                        "content": {
                            "application/json": {
                                "schema": {
                                "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    
                    "401": {
                        "description": "User is not authorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    }                
                }
            }
        },
        
        "/transactions/expenses/month": {
            "get": {
                "tags": ["Expenses"],
                "summary": "All user's expenses transactions for the selected month",

                "security": [{ "Bearer": [] }], 
                
                "parameters": 
                [
                    
                    {
                        "name": "year",
                        "in": "query",
                        "required": true,
                        "description": "Transaction's year in query",
                        "schema": {
                            "type": "integer",
                            "description": "Transaction's year", 
                            "example": 2023
                        }                            
                    },
                        
                    {
                        "name": "month",
                        "in": "query",
                        "required": true,
                        "description": "Transaction's month in query",
                        "schema": {
                            "type": "integer",
                            "description": "Transaction's month", 
                            "example": 10
                        }                             
                    }
                ],                 

                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                "$ref": "#/components/schemas/GetAllTransactionsByTypeResponse"
                                }
                            }
                        }
                    },

                    "400": {
                        "description": "Bad request (invalid request body)",
                        "content": {
                            "application/json": {
                                "schema": {
                                "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    
                    "401": {
                        "description": "User is not authorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    }                
                }
            }
        },
        
        "/transactions/expenses/summary": {
            "get": {
                "tags": ["Expenses"],
                "summary": "All user's expenses transactions are grouped into months (month/sum)",

                "security": [{ "Bearer": [] }],                

                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                "$ref": "#/components/schemas/GroupedTransactionsByMonthResponse"
                                }
                            }
                        }
                    },

                    "400": {
                        "description": "Bad request (invalid request body)",
                        "content": {
                            "application/json": {
                                "schema": {
                                "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    
                    "401": {
                        "description": "User is not authorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    }                
                }
            }
        },
        
        "/transactions/expenses/category": {
            "get": {
                "tags": ["Expenses"],
                "summary": "All user's expenses transactions are grouped into categories (category/sum)",

                "security": [{ "Bearer": [] }],                

                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                "$ref": "#/components/schemas/GroupedTransactionsByCategoryResponse"
                                }
                            }
                        }
                    },

                    "400": {
                        "description": "Bad request (invalid request body)",
                        "content": {
                            "application/json": {
                                "schema": {
                                "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    
                    "401": {
                        "description": "User is not authorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    }                
                }
            }
        },
        
        "/transactions/expenses/description": {
            "get": {
                "tags": ["Expenses"],
                "summary": "All user's expenses transactions are grouped into description (description/sum)",

                "security": [{ "Bearer": [] }],                

                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                "$ref": "#/components/schemas/GroupedTransactionsByDescriptionResponse"
                                }
                            }
                        }
                    },

                    "400": {
                        "description": "Bad request (invalid request body)",
                        "content": {
                            "application/json": {
                                "schema": {
                                "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    
                    "401": {
                        "description": "User is not authorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    }                
                }
            }
        },
        
        "/transactions/income": {
            "get": {
                "tags": ["Income"],
                "summary": "All user's expenses transactions",

                "security": [{ "Bearer": [] }],                

                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                "$ref": "#/components/schemas/GetAllTransactionsByTypeResponse"
                                }
                            }
                        }
                    },

                    "400": {
                        "description": "Bad request (invalid request body)",
                        "content": {
                            "application/json": {
                                "schema": {
                                "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    
                    "401": {
                        "description": "User is not authorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    }                
                }
            }
        },
        
        "/transactions/income/month": {
            "get": {
                "tags": ["Income"],
                "summary": "All user's expenses transactions for the selected month",

                "security": [{ "Bearer": [] }],
                
                "parameters": 
                [
                    
                    {
                        "name": "year",
                        "in": "query",
                        "required": true,
                        "description": "Transaction's year in query",
                        "schema": {
                            "type": "integer",
                            "description": "Transaction's year", 
                            "example": 2023
                        }                            
                    },
                        
                    {
                        "name": "month",
                        "in": "query",
                        "required": true,
                        "description": "Transaction's month in query",
                        "schema": {
                            "type": "integer",
                            "description": "Transaction's month", 
                            "example": 10
                        }                             
                    }
                ],                 

                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                "$ref": "#/components/schemas/GetAllTransactionsByTypeResponse"
                                }
                            }
                        }
                    },

                    "400": {
                        "description": "Bad request (invalid request body)",
                        "content": {
                            "application/json": {
                                "schema": {
                                "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    
                    "401": {
                        "description": "User is not authorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    }                
                }
            }
        },
        
        "/transactions/income/summary": {
            "get": {
                "tags": ["Income"],
                "summary": "All user's expenses transactions are grouped into months (month/sum)",

                "security": [{ "Bearer": [] }],                

                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                "$ref": "#/components/schemas/GroupedTransactionsByMonthResponse"
                                }
                            }
                        }
                    },

                    "400": {
                        "description": "Bad request (invalid request body)",
                        "content": {
                            "application/json": {
                                "schema": {
                                "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    
                    "401": {
                        "description": "User is not authorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    }                
                }
            }
        },
        
        "/transactions/income/category": {
            "get": {
                "tags": ["Income"],
                "summary": "All user's expenses transactions are grouped into categories (category/sum)",

                "security": [{ "Bearer": [] }],                

                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                "$ref": "#/components/schemas/GroupedTransactionsByCategoryResponse"
                                }
                            }
                        }
                    },

                    "400": {
                        "description": "Bad request (invalid request body)",
                        "content": {
                            "application/json": {
                                "schema": {
                                "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    
                    "401": {
                        "description": "User is not authorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    }                
                }
            }
        },
        
        "/transactions/income/description": {
            "get": {
                "tags": ["Income"],
                "summary": "All user's expenses transactions are grouped into description (description/sum)",

                "security": [{ "Bearer": [] }],                

                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                "$ref": "#/components/schemas/GroupedTransactionsByDescriptionResponse"
                                }
                            }
                        }
                    },

                    "400": {
                        "description": "Bad request (invalid request body)",
                        "content": {
                            "application/json": {
                                "schema": {
                                "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    
                    "401": {
                        "description": "User is not authorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    }                
                }
            }
        },
        
        "/transactions": {
            "post": {
                "tags": ["Transactions"],
                "summary": "User can add new transaction",

                "security": [{ "Bearer": [] }],
                
                "requestBody": {
                    "description": "Transaction's object",
                    "required": true,
                    
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddTransactionRequest"
                            }
                        }
                    }                    
                },

                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                "$ref": "#/components/schemas/Transaction"
                                }
                            }
                        }
                    },

                    "400": {
                        "description": "Bad request (invalid request body)",
                        "content": {
                            "application/json": {
                                "schema": {
                                "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    
                    "401": {
                        "description": "User is not authorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    }                
                }
            }
        },
        
        "/transactions/{transactionId}": {
            "delete": {
                "tags": ["Transactions"],
                "summary": "User can delete selected transaction",

                "security": [{ "Bearer": [] }],
                
                "parameters": 
                [
                    {
                        "name": "transactionId",
                        "in": "path",
                        "required": true,
                        "description": "Transaction's id in path",
                        "schema": {
                            "type": "integer",
                            "description": "Transaction's id in", 
                            "example": 12345
                        }                    
                    }
                ],

                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type":"object",
                                    "description": "Response message for success delete transaction",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Message after successfully deleting",
                                            "example": "Transaction was deleted successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },

                    "400": {
                        "description": "Bad request (invalid request body)",
                        "content": {
                            "application/json": {
                                "schema": {
                                "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    
                    "401": {
                        "description": "User is not authorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    }                
                }
            }
        }        
    },

    "components": {
        "schemas": {
            "RegistrationRequest": {
                "type": "object",
                "required": ["name", "email", "password"],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "User's name",
                        "example": "UserName"
                    },
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password",
                        "example": "Qwerty12345!"
                    }
                }
            },

            "RegistrationResponse": {
                "type": "object",
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/User",
                        "description": "User's information"
                    },
                    "token": {
                        "type": "string",
                        "description": "User's access token",
                        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0YTQ0NjhlMDNjc3E3OTZhZDk3N2Q1YiJ9.Yh8Xgp-e6DL8-23gfFEUaJK6G19qahZPlsrYkLrDccs"
                    }
                }
            },
            
            "EmailExistError": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Response message for error code 409",
                        "example": "Email example@gmail.com already in use"
                    }
                }
            },

            "LoginRequest": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password",
                        "example": "Qwerty12345!"
                    }
                }
            },

            "LoginResponse": {
                "type": "object",
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/User",
                        "description": "User's information"
                        },
                    
                    "token": {
                        "type": "string",
                        "description": "User's access token",
                        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0YTQ0NjhlMDNjc3E3OTZhZDk3N2Q1YiJ9.Yh8Xgp-e6DL8-23gfFEUaJK6G19qahZPlsrYkLrDccs"
                    }
                }
            },   
            
            "EmailOrPasswordError": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Response message for error code 401",
                        "example": "Email or password is wrong"
                    }
                }
            }, 

            "NotVerifiedError": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Response message for error code 401, if email not verified",
                        "example": "Email not verified"
                    }
                }
            },

            "LogoutRequest": {
                "type": "object",
                "required": ["token"],
                "properties": {
                    "token": {
                        "type": "string",
                        "description": "User's access token",
                        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0YTQ0NjhlMDNjc3E3OTZhZDk3N2Q1YiJ9.Yh8Xgp-e6DL8-23gfFEUaJK6G19qahZPlsrYkLrDccs"
                    }
                }
            },
            
            "BalanceResponse": {
                "type": "object",
                "properties": {
                    "start_balance": {
                        "type": "number",
                        "description": "User's start balance",
                        "example": 100.00
                    },

                    "balance": {
                        "type": "number",
                        "description": "User's current balance",
                        "example": 150.45
                    }                    
                }
            },
            
            "AddBalanceRequest": {
                "type": "object",
                "required": ["balance"],
                "properties": {
                    "start_balance": {
                        "type": "number",
                        "description": "User add's his(her) start balance",
                        "example": 150.45
                    }
                }
            },
            
            "AddBalanceResponse": {
                "type": "object",
                "properties": {
                    "user": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Username",
                                "example": "Jhon"
                            },
                            "email": {
                                "type": "string",
                                "description": "User's email",
                                "example": "example@gmail.com"
                            },
                            "balance": {
                                "type": "number",
                                "description": "User's balance",
                                "example": 150.45
                            }
                        }
                    }
                }
            }, 
            
            "GetAllTransactionsByTypeResponse": {
                "type": "object",
                "properties": {
                    "transactions": {
                        "type": "array",
                        "items": {
                            "$ref":"#/components/schemas/Transaction"
                        },
                        "description": "An array of transactions"
                    }                   
                }
            },
            
            "GroupedTransactionsByMonthResponse": {
                "type": "object",
                "properties": {
                    "report": {
                        "type": "array",
                        "description": "An array of grouped transactions into month",
                        "items": {
                            "type": "object",
                            "description": "Object with sum and month of transactions",
                            "properties": {
                                "month": {
                                    "type": "string",
                                    "description": "Month of transactions",
                                    "example": "2023-07-01T00:00:00.000Z"
                                },
                                "total_sum": {
                                    "type": "number",
                                    "description": "Total sum of transactions in appropriate month",
                                    "example": 166.00
                                }
                            }
                        }
                    }
                }
            },
            
            "GroupedTransactionsByCategoryResponse": {
                "type": "object",
                "properties": {
                    "report": {
                        "type": "array",
                        "description": "An array of grouped transactions into category",
                        "items": {
                            "type": "object",
                            "description": "Object with sum and category of transactions",
                            "properties": {
                                "category": {
                                    "type": "string",
                                    "description": "Transaction's category",
                                    "example": "Transport"
                                },
                                "total_sum": {
                                    "type": "number",
                                    "description": "Total sum of transactions in appropriate category",
                                    "example": 166.00
                                }
                            }
                        }
                    }
                }
            },
            
            "GroupedTransactionsByDescriptionResponse": {
                "type": "object",
                "properties": {
                    "report": {
                        "type": "array",
                        "description": "An array of grouped transactions into description",
                        "items": {
                            "type": "object",
                            "description": "Object with sum and description of transactions",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Transaction's description",
                                    "example": "Transport"
                                },
                                "total_sum": {
                                    "type": "number",
                                    "description": "Total sum of transactions in appropriate description",
                                    "example": 166.00
                                }
                            }
                        }
                    }
                }
            },
            
            "AddTransactionRequest": {
                "type": "object",
                "required": ["type", "category", "description", "sum"],
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": ["income", "expense"],
                        "description": "User add's type of transaction",
                        "example": "expense"
                    },

                    "category": {
                        "type": "string",
                        "enum": ["Transport", "Products", "Health", "Alcohol", "Entertainment", 
                                "Housing", "Technique", "Communal, communication", "Sports, hobbies", 
                                "Education", "Other", "Salary", "Other income"],
                        "description": "User add's category of transaction",
                        "example": "Products"
                    },

                    "description": {
                        "type": "string",
                        "description": "User add's some description into transaction",
                        "example": "Fish"
                    },
                    
                    "sum": {
                        "type": "number",
                        "description": "User add's sum of transaction",
                        "example": 99.99
                    }                    
                }
            },
            
            "AddTransactionResponse": {
                "type": "object",
                "properties": {
                    "transaction": {
                        "type": "object",
                        "$ref":"#/components/schemas/Transaction",
                        "description":"Information about created transaction"
                    },
                    "balance": {
                        "type": "number",
                        "description": "Sum of user's balance includes just created transaction",
                        "example": 5000.55
                    }
                }
            },            

            "BadRequestError": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Response message for error code 400",
                        "example": "Bad request"
                    }
                }
            },

            "UnauthorizedError": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Response message for error code 401",
                        "example": "Not authorized"
                    }
                }
            },

            "User": {
                "type":"object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Username",
                        "example": "Jhon"
                    },
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "example": "example@gmail.com"
                    },
                    "balance": {
                        "type": "number",
                        "description": "User's balance",
                        "properties": {
                            "example": 150.45
                        }
                    }
                }
            },

            "Transaction": {
                "type":"object",
                "properties": {
                    "id": {
                        "type": "number",
                        "description": "Transaction's id",
                        "example": 12345
                    },

                    "date": {
                        "type": "string",
                        "description": "Transaction's timestamp",
                        "example": "2023-09-28T20:07:35.283Z"
                    },

                    "category": {
                        "type": "string",
                        "description": "Transaction's category",
                        "example": "Transport"
                    },

                    "description": {
                        "type": "string",
                        "description": "Transaction's description",
                        "example": "Metro"
                    },

                    "type": {
                        "type": "string",
                        "description": "Transaction's type",
                        "example": "expense"
                    },
                    
                    "sum": {
                        "type": "number",
                        "description": "Transaction's sum",
                        "example": 150.45
                    }                          
                }            
            }            
            
        },

        "securitySchemes": {
            "Bearer": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}
